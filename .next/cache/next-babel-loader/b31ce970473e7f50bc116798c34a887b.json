{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/angelico/Desktop/Sabai/with-cookie-auth-app/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/layout\";\nimport { login } from \"../utils/auth\";\nimport styles from \"../styles/styles.scss\";\n\nfunction Login() {\n  var _useState = useState({\n    username: \"\",\n    error: \"\"\n  }),\n      userData = _useState[0],\n      setUserData = _useState[1];\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var username, url, response, _ref, token, error, _response;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n              setUserData(_Object$assign({}, userData, {\n                error: \"\"\n              }));\n              username = userData.username;\n              url = \"/api/login\";\n              _context.prev = 4;\n              _context.next = 7;\n              return fetch(url, {\n                method: \"POST\",\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                body: _JSON$stringify({\n                  username: username\n                })\n              });\n\n            case 7:\n              response = _context.sent;\n\n              if (!(response.status === 200)) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 11;\n              return response.json();\n\n            case 11:\n              _ref = _context.sent;\n              token = _ref.token;\n              _context.next = 15;\n              return login({\n                token: token\n              });\n\n            case 15:\n              _context.next = 21;\n              break;\n\n            case 17:\n              console.log(\"Login failed.\"); // https://github.com/developit/unfetch#caveats\n\n              error = new Error(response.statusText);\n              error.response = response;\n              throw error;\n\n            case 21:\n              _context.next = 28;\n              break;\n\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](4);\n              console.error(\"You have an error in your code or there are Network issues.\", _context.t0);\n              _response = _context.t0.response;\n              setUserData(_Object$assign({}, userData, {\n                error: _response ? _response.statusText : _context.t0.message\n              }));\n\n            case 28:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[4, 23]]);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Project Sa'bai\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://combinatronics.com/kiwicopple/quick-font/master/css/circular.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    \"class\": \"columns is-centered m-lg\",\n    style: {\n      fontFamily: \"Circular\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    \"class\": \"column is-4 is-vcentered is-desktop\",\n    style: {\n      backgroundColor: 'blue'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    \"class\": \"level-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"figure\", {\n    \"class\": \"image is-128x128 level-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"../static/sabaiLogo.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), __jsx(\"h1\", {\n    \"class\": \"level-item\",\n    style: {\n      fontSize: '3em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Project Sa'bai\")), __jsx(\"div\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))))) // <style jsx>{`\n  //   .login {\n  //     max-width: 340px;\n  //     margin: 0 auto;\n  //     padding: 1rem;\n  //     border: 1px solid #ccc;\n  //     border-radius: 4px;\n  //   }\n  //   form {\n  //     display: flex;\n  //     flex-flow: column;\n  //   }\n  //   label {\n  //     font-weight: 600;\n  //   }\n  //   input {\n  //     padding: 8px;\n  //     margin: 0.3rem 0 1rem;\n  //     border: 1px solid #ccc;\n  //     border-radius: 4px;\n  //   }\n  //   .error {\n  //     margin: 0.5rem 0 0;\n  //     color: brown;\n  //   }\n  // `}</style>\n  ;\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/angelico/Desktop/Sabai/with-cookie-auth-app/pages/login.js"],"names":["React","useState","Head","fetch","Layout","login","styles","Login","username","error","userData","setUserData","handleSubmit","event","preventDefault","url","method","headers","body","response","status","json","token","console","log","Error","statusText","message","fontFamily","backgroundColor","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/layout\";\nimport { login } from \"../utils/auth\";\nimport styles from \"../styles/styles.scss\";\n\nfunction Login() {\n  const [userData, setUserData] = useState({ username: \"\", error: \"\" });\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setUserData(Object.assign({}, userData, { error: \"\" }));\n\n    const username = userData.username;\n    const url = \"/api/login\";\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username })\n      });\n      if (response.status === 200) {\n        const { token } = await response.json();\n        await login({ token });\n      } else {\n        console.log(\"Login failed.\");\n        // https://github.com/developit/unfetch#caveats\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error(\n        \"You have an error in your code or there are Network issues.\",\n        error\n      );\n\n      const { response } = error;\n      setUserData(\n        Object.assign({}, userData, {\n          error: response ? response.statusText : error.message\n        })\n      );\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Project Sa'bai</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://combinatronics.com/kiwicopple/quick-font/master/css/circular.css\"\n        />\n      </Head>\n\n      <main>\n        <div\n          class=\"columns is-centered m-lg\"\n          style={{ fontFamily: \"Circular\" }}\n        >\n          <div class=\"column is-4 is-vcentered is-desktop\" style={{backgroundColor:'blue'}}>\n            <div class=\"level-left\">\n              <figure class=\"image is-128x128 level-item\">\n                <img src={\"../static/sabaiLogo.png\"} />\n              </figure>\n              <h1 class=\"level-item\" style={{fontSize:'3em'}}>Project Sa'bai</h1>\n            </div>\n            <div className=\"login\">\n              {/* <form onSubmit={handleSubmit}>\n                <label htmlFor=\"username\" class='label'>Username</label>\n\n                <input\n                  type=\"text\"\n                  class=\"input\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={userData.username}\n                  onChange={event =>\n                    setUserData(\n                      Object.assign({}, userData, {\n                        username: event.target.value\n                      })\n                    )\n                  }\n                />\n\n                <label htmlFor=\"password\" class='label'>Password</label>\n\n                <input\n                  type=\"text\"\n                  class=\"input\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={userData.username}\n                  onChange={event =>\n                    setUserData(\n                      Object.assign({}, userData, {\n                        username: event.target.value\n                      })\n                    )\n                  }\n                />\n\n                <button class='button buttonStyle' type=\"submit\">Login</button>\n\n                {userData.error && (\n                  <p className=\"error\">Error: {userData.error}</p>\n                )}\n              </form> */}\n            </div>\n          </div>\n        </div>\n      </main>\n    </React.Fragment>\n\n    // <style jsx>{`\n    //   .login {\n    //     max-width: 340px;\n    //     margin: 0 auto;\n    //     padding: 1rem;\n    //     border: 1px solid #ccc;\n    //     border-radius: 4px;\n    //   }\n\n    //   form {\n    //     display: flex;\n    //     flex-flow: column;\n    //   }\n\n    //   label {\n    //     font-weight: 600;\n    //   }\n\n    //   input {\n    //     padding: 8px;\n    //     margin: 0.3rem 0 1rem;\n    //     border: 1px solid #ccc;\n    //     border-radius: 4px;\n    //   }\n\n    //   .error {\n    //     margin: 0.5rem 0 0;\n    //     color: brown;\n    //   }\n    // `}</style>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar _jsxFileName = \"/Users/angelico/Desktop/Sabai/with-cookie-auth-app/pages/login.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/layout\";\nimport { login } from \"../utils/auth\";\nimport styles from \"../styles/styles.scss\";\n\nfunction Login() {\n  const {\n    0: userData,\n    1: setUserData\n  } = useState({\n    username: \"\",\n    error: \"\"\n  });\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setUserData(_Object$assign({}, userData, {\n      error: \"\"\n    }));\n    const username = userData.username;\n    const url = \"/api/login\";\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: _JSON$stringify({\n          username\n        })\n      });\n\n      if (response.status === 200) {\n        const {\n          token\n        } = await response.json();\n        await login({\n          token\n        });\n      } else {\n        console.log(\"Login failed.\"); // https://github.com/developit/unfetch#caveats\n\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error(\"You have an error in your code or there are Network issues.\", error);\n      const {\n        response\n      } = error;\n      setUserData(_Object$assign({}, userData, {\n        error: response ? response.statusText : error.message\n      }));\n    }\n  }\n\n  return __jsx(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(Head, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Project Sa'bai\"), __jsx(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://combinatronics.com/kiwicopple/quick-font/master/css/circular.css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), __jsx(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    class: \"columns is-centered m-lg\",\n    style: {\n      fontFamily: \"Circular\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    class: \"column is-4 is-vcentered is-desktop\",\n    style: {\n      backgroundColor: 'blue'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    class: \"level-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"figure\", {\n    class: \"image is-128x128 level-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"../static/sabaiLogo.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), __jsx(\"h1\", {\n    class: \"level-item\",\n    style: {\n      fontSize: '3em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Project Sa'bai\")), __jsx(\"div\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }))))) // <style jsx>{`\n  //   .login {\n  //     max-width: 340px;\n  //     margin: 0 auto;\n  //     padding: 1rem;\n  //     border: 1px solid #ccc;\n  //     border-radius: 4px;\n  //   }\n  //   form {\n  //     display: flex;\n  //     flex-flow: column;\n  //   }\n  //   label {\n  //     font-weight: 600;\n  //   }\n  //   input {\n  //     padding: 8px;\n  //     margin: 0.3rem 0 1rem;\n  //     border: 1px solid #ccc;\n  //     border-radius: 4px;\n  //   }\n  //   .error {\n  //     margin: 0.5rem 0 0;\n  //     color: brown;\n  //   }\n  // `}</style>\n  ;\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/angelico/Desktop/Sabai/with-cookie-auth-app/pages/login.js"],"names":["React","useState","Head","fetch","Layout","login","styles","Login","userData","setUserData","username","error","handleSubmit","event","preventDefault","url","response","method","headers","body","status","token","json","console","log","Error","statusText","message","fontFamily","backgroundColor","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Head from \"next/head\";\nimport fetch from \"isomorphic-unfetch\";\nimport Layout from \"../components/layout\";\nimport { login } from \"../utils/auth\";\nimport styles from \"../styles/styles.scss\";\n\nfunction Login() {\n  const [userData, setUserData] = useState({ username: \"\", error: \"\" });\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    setUserData(Object.assign({}, userData, { error: \"\" }));\n\n    const username = userData.username;\n    const url = \"/api/login\";\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ username })\n      });\n      if (response.status === 200) {\n        const { token } = await response.json();\n        await login({ token });\n      } else {\n        console.log(\"Login failed.\");\n        // https://github.com/developit/unfetch#caveats\n        let error = new Error(response.statusText);\n        error.response = response;\n        throw error;\n      }\n    } catch (error) {\n      console.error(\n        \"You have an error in your code or there are Network issues.\",\n        error\n      );\n\n      const { response } = error;\n      setUserData(\n        Object.assign({}, userData, {\n          error: response ? response.statusText : error.message\n        })\n      );\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <Head>\n        <title>Project Sa'bai</title>\n        <link\n          rel=\"stylesheet\"\n          href=\"https://combinatronics.com/kiwicopple/quick-font/master/css/circular.css\"\n        />\n      </Head>\n\n      <main>\n        <div\n          class=\"columns is-centered m-lg\"\n          style={{ fontFamily: \"Circular\" }}\n        >\n          <div class=\"column is-4 is-vcentered is-desktop\" style={{backgroundColor:'blue'}}>\n            <div class=\"level-left\">\n              <figure class=\"image is-128x128 level-item\">\n                <img src={\"../static/sabaiLogo.png\"} />\n              </figure>\n              <h1 class=\"level-item\" style={{fontSize:'3em'}}>Project Sa'bai</h1>\n            </div>\n            <div className=\"login\">\n              {/* <form onSubmit={handleSubmit}>\n                <label htmlFor=\"username\" class='label'>Username</label>\n\n                <input\n                  type=\"text\"\n                  class=\"input\"\n                  id=\"username\"\n                  name=\"username\"\n                  value={userData.username}\n                  onChange={event =>\n                    setUserData(\n                      Object.assign({}, userData, {\n                        username: event.target.value\n                      })\n                    )\n                  }\n                />\n\n                <label htmlFor=\"password\" class='label'>Password</label>\n\n                <input\n                  type=\"text\"\n                  class=\"input\"\n                  id=\"password\"\n                  name=\"password\"\n                  value={userData.username}\n                  onChange={event =>\n                    setUserData(\n                      Object.assign({}, userData, {\n                        username: event.target.value\n                      })\n                    )\n                  }\n                />\n\n                <button class='button buttonStyle' type=\"submit\">Login</button>\n\n                {userData.error && (\n                  <p className=\"error\">Error: {userData.error}</p>\n                )}\n              </form> */}\n            </div>\n          </div>\n        </div>\n      </main>\n    </React.Fragment>\n\n    // <style jsx>{`\n    //   .login {\n    //     max-width: 340px;\n    //     margin: 0 auto;\n    //     padding: 1rem;\n    //     border: 1px solid #ccc;\n    //     border-radius: 4px;\n    //   }\n\n    //   form {\n    //     display: flex;\n    //     flex-flow: column;\n    //   }\n\n    //   label {\n    //     font-weight: 600;\n    //   }\n\n    //   input {\n    //     padding: 8px;\n    //     margin: 0.3rem 0 1rem;\n    //     border: 1px solid #ccc;\n    //     border-radius: 4px;\n    //   }\n\n    //   .error {\n    //     margin: 0.5rem 0 0;\n    //     color: brown;\n    //   }\n    // `}</style>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}